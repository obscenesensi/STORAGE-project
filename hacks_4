Object.extend(Campfire.Message.prototype, {
  addAvatar: function() {
    if (this.actsLikeTextMessage()) {
      var author = this.authorElement();
      var avatar = '';

      if (author.visible()) {
        author.hide();
        if (this.bodyCell.select('strong').length === 0) {
          //this.bodyCell.insert({top: '<strong style="color:#333;">'+author.textContent+'</strong><br>'});
          this.bodyCell.insert({top: '<strong style="color:#333;"></strong>'});
          avatar = author.getAttribute('data-avatar') || 'http://asset1.37img.com/global/missing/avatar.png?r=3';
          author.insert({after: '<img alt="'+this.author()+'" width="32" height="32" align="top" class="avatar" style="opacity: 1.0; margin-left: 5px; border-radius:3px" src="'+avatar+'">'});
        }
      }
    }
  }
});

/* if you can wrap rather than rewrite, use swizzle like this: */
swizzle(Campfire.Message, {
  setAuthorVisibilityInRelationTo: function($super, message) {
    $super(message);
    this.addAvatar();
  }
});


/* defining a new responder is probably the best way to insulate your hacks from Campfire and Propane */
Campfire.AvatarMangler = Class.create({
  initialize: function(chat) {
    this.chat = chat;

    var messages = this.chat.transcript.messages;
    for (var i = 0; i < messages.length; i++) {
      var message = messages[i];
      message.addAvatar();
    }

    this.chat.layoutmanager.layout();
    this.chat.windowmanager.scrollToBottom();
  },

  onMessagesInserted: function(messages) {
    var scrolledToBottom = this.chat.windowmanager.isScrolledToBottom();

    for (var i = 0; i < messages.length; i++) {
      var message = messages[i];
      message.addAvatar();
    }

    if (scrolledToBottom) {
      this.chat.windowmanager.scrollToBottom();
    }
  }
});

/* Here is how to install your responder into the running chat */
Campfire.Responders.push("AvatarMangler");
window.chat.installPropaneResponder("AvatarMangler", "avatarmangler");
