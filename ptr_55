#include <boost/shared_ptr.hpp>
#include <boost/type_traits/is_pointer.hpp>
#include <boost/mpl/bool.hpp>
#include <iostream>

template <class T>
struct is_shared_ptr
: boost::mpl::false_ {};
template <class T>
struct is_shared_ptr<boost::shared_ptr<T> >
: boost::mpl::true_ {};

class Dummy
{
};

template<typename _T>
void check(_T)
{
	std::cout << std::boolalpha << is_shared_ptr<_T>::value << std::endl;
}

int main()
{
	Dummy dummy;
	Dummy* dummy_ptr = &dummy;
	boost::shared_ptr<Dummy> shared_dummy(new Dummy);

	check(dummy);        // false
	check(dummy_ptr);    // false
	check(shared_dummy); // true

	return 0;
}
